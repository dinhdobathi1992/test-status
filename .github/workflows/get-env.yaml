on:
  workflow_dispatch:
jobs:
  generate-projects:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2

      - id: set-matrix
        name: Select projects for Deployment
        run: |
          file="aws/example/be-env-cfg.dcbencrypted"
          projects=$(dirname "$file" | awk -F/ '{print $NF}')
          echo ::set-output name=matrix::{\"include\":$(echo $projects)}\"
  get-env-output:
    name: Deploy ${{ matrix.project }}
    needs: generate-projects
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.generate-projects.outputs.matrix)}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1
      - name: list file changed
        id: list_file_changed
        shell: bash
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          
          file="aws/example/be-env-cfg.dcbencrypted"
          client_name=$(dirname "$file" | awk -F/ '{print $NF}')
          echo $client_name
          echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
          ls -ls aws/example
          echo "::set-output name=env::$client_name"

      - name: Run tests
        uses: mathiasvr/command-output@v1
        id: tests
        env:
            ENV: ${{ steps.list_file_changed.outputs.env }}
            SELECTED_COLOR: ${{ steps.list_file_changed.outputs.SELECTED_COLOR }}
            AWS_ACCESS_KEY_ID_EXAMPLE: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', env.ENV)] }}
            AWS_SECRET_ACCESS_KEY_EXAMPLE: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ENV)] }}
        with:
          run: |
              echo $ENV
              echo $SELECTED_COLOR
              echo $AWS_ACCESS_KEY_ID_EXAMPLE
              echo $AWS_SECRET_ACCESS_KEY_EXAMPLE
                
