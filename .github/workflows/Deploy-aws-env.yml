name: Deploy AWS ENV

on:
  workflow_dispatch:
    inputs:
      project-name:
        description: The name of the project to be deployed
        required: true
        type: choice
        options:
        - EXAMPLE
        - SIDUS
        - DECUBATE
        - AITECH
jobs:
  update-aws-cfg:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1

      - name: Setup NodeJS 18
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Show NodeJS version
        run: npm --version

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Define Profile
        id: define_profile
        shell: bash
        env:
          PROJECT_NAME: ${{ inputs.project-name }}
        run: |
          echo "PROFILE=$PROJECT_NAME" >> $GITHUB_ENV

      - uses: Fooji/create-aws-profile-action@v1
        with:
          profile: ${{ env.PROFILE }}
          region: ap-southeast-1
          key: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', env.PROFILE)] }}
          secret: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.PROFILE)] }}

      - name: get caller identity1
        env:
          PROFILE: ${{ env.PROFILE }}
        run: |
          echo "Profile: $PROFILE"
          echo "ENV: $PROFILE"
          aws sts get-caller-identity --profile $PROFILE

      - name: Update AWS Params
        shell: bash
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PROFILE: ${{ env.PROFILE }}
        run: |
            echo $PRIVATE_KEY > private.pem
            cat private.pem
            ls -la
            ls -la aws/$PROFILE
            node .github/scripts/decrypt-jsonfile.js $PROFILE aws/$PROFILE/be-env-cfg.dcbencrypted

            echo "OUTPUT TESTING"
            cat aws/$PROFILE/decrypted_data.json
            echo "updating params"
            AWS_PROFILE=$PROFILE node .github/scripts/set-env-params.js  aws/$PROFILE/decrypted_data.json
